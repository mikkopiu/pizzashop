@using PizzaShop.Models
@model PizzaShop.Models.Order

@{
    ViewBag.Title = "Order";
}

<h2>Order</h2>

<div class="panel panel-primary">
    <div class="panel-heading">
        <h3 class="panel-title">Order Summary</h3>
    </div>
    <div class="panel-body">
        <table class="table table-striped table-hover ">
            <thead>
                <tr>
                    <th>Pizza</th>
                    <th>Toppings</th>
                    <th>Extra toppings</th>
                    <th>Price</th>
                    <th></th>
                </tr>
            </thead>
            <tbody></tbody>
            @foreach (var item in ViewBag.Cart)
            {
                <tr id="row-@item.ID">
                    <td>@item.Pizza.Name</td>
                    <td>
                        @{ int i = 0; }
                        @foreach (Topping t in item?.Pizza?.Toppings ?? new List<Topping>())
                        {
                            if (i + 1 < item.Pizza.Toppings.Count)
                            {
                                @: @t.Name,
                                        }
                            else
                            {
                                @: @t.Name
                                        }
                            i++;
                        }
                    </td>
                    <td>
                        @{ int j = 0; }
                        @foreach (Topping t in item?.ExtraToppings ?? new List<Topping>())
                        {
                            if (j + 1 < item.ExtraToppings.Count)
                            {
                                @: @t.Name,
                                        }
                            else
                            {
                                @: @t.Name
                                        }
                            j++;
                        }
                    </td>
                    <td>@item.GetActualPrice().ToString().Replace(".", ",") &euro;</td>
                    <td>
                        <a href="#" class="remove-item-link" data-id="@item.ID">Remove from cart</a>
                    </td>
                </tr>
                            }
            <tfoot>
                <tr class="active">
                    <td><strong>Total</strong></td>
                    <td></td>
                    <td></td>
                    <td>
                        <strong id="cart-total">@ViewBag.CartTotalPrice.ToString().Replace(".", ",")</strong> &euro;
                    </td>
                    <td></td>
                </tr>
            </tfoot>
        </table>
    </div>
</div>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Order details</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.DeliveryAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeliveryAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DeliveryAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DeliveryPostCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeliveryPostCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DeliveryPostCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DeliveryCity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeliveryCity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DeliveryCity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Order" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to cart", "Index", "ShoppingCart")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}